'use strict';

module.exports = function () {

	// Occupy the global variable of Chart, and create a simple base class
	var Chart = function Chart(item, config) {
		this.controller = new Chart.Controller(item, config, this);
		return this.controller;
	};

	// Globally expose the defaults to allow for user updating/changing
	Chart.defaults = {
		global: {
			responsive: true,
			responsiveAnimationDuration: 0,
			maintainAspectRatio: true,
			events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],
			hover: {
				onHover: null,
				mode: 'nearest',
				intersect: true,
				animationDuration: 400
			},
			onClick: null,
			defaultColor: 'rgba(0,0,0,0.1)',
			defaultFontColor: '#666666',
			defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
			defaultFontSize: 12,
			defaultFontStyle: 'normal',
			showLines: true,

			// Element defaults defined in element extensions
			elements: {},

			// Legend callback string
			legendCallback: function legendCallback(chart) {
				var text = [];
				text.push('<ul class="' + chart.id + '-legend">');
				for (var i = 0; i < chart.data.datasets.length; i++) {
					text.push('<li><span style="background-color:' + chart.data.datasets[i].backgroundColor + '"></span>');
					if (chart.data.datasets[i].label) {
						text.push(chart.data.datasets[i].label);
					}
					text.push('</li>');
				}
				text.push('</ul>');

				return text.join('');
			}
		}
	};

	Chart.Chart = Chart;

	return Chart;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIkNoYXJ0IiwiaXRlbSIsImNvbmZpZyIsImNvbnRyb2xsZXIiLCJDb250cm9sbGVyIiwiZGVmYXVsdHMiLCJnbG9iYWwiLCJyZXNwb25zaXZlIiwicmVzcG9uc2l2ZUFuaW1hdGlvbkR1cmF0aW9uIiwibWFpbnRhaW5Bc3BlY3RSYXRpbyIsImV2ZW50cyIsImhvdmVyIiwib25Ib3ZlciIsIm1vZGUiLCJpbnRlcnNlY3QiLCJhbmltYXRpb25EdXJhdGlvbiIsIm9uQ2xpY2siLCJkZWZhdWx0Q29sb3IiLCJkZWZhdWx0Rm9udENvbG9yIiwiZGVmYXVsdEZvbnRGYW1pbHkiLCJkZWZhdWx0Rm9udFNpemUiLCJkZWZhdWx0Rm9udFN0eWxlIiwic2hvd0xpbmVzIiwiZWxlbWVudHMiLCJsZWdlbmRDYWxsYmFjayIsImNoYXJ0IiwidGV4dCIsInB1c2giLCJpZCIsImkiLCJkYXRhIiwiZGF0YXNldHMiLCJsZW5ndGgiLCJiYWNrZ3JvdW5kQ29sb3IiLCJsYWJlbCIsImpvaW4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPQyxPQUFQLEdBQWlCLFlBQVc7O0FBRTNCO0FBQ0EsS0FBSUMsUUFBUSxTQUFSQSxLQUFRLENBQVNDLElBQVQsRUFBZUMsTUFBZixFQUF1QjtBQUNsQyxPQUFLQyxVQUFMLEdBQWtCLElBQUlILE1BQU1JLFVBQVYsQ0FBcUJILElBQXJCLEVBQTJCQyxNQUEzQixFQUFtQyxJQUFuQyxDQUFsQjtBQUNBLFNBQU8sS0FBS0MsVUFBWjtBQUNBLEVBSEQ7O0FBS0E7QUFDQUgsT0FBTUssUUFBTixHQUFpQjtBQUNoQkMsVUFBUTtBQUNQQyxlQUFZLElBREw7QUFFUEMsZ0NBQTZCLENBRnRCO0FBR1BDLHdCQUFxQixJQUhkO0FBSVBDLFdBQVEsQ0FBQyxXQUFELEVBQWMsVUFBZCxFQUEwQixPQUExQixFQUFtQyxZQUFuQyxFQUFpRCxXQUFqRCxDQUpEO0FBS1BDLFVBQU87QUFDTkMsYUFBUyxJQURIO0FBRU5DLFVBQU0sU0FGQTtBQUdOQyxlQUFXLElBSEw7QUFJTkMsdUJBQW1CO0FBSmIsSUFMQTtBQVdQQyxZQUFTLElBWEY7QUFZUEMsaUJBQWMsaUJBWlA7QUFhUEMscUJBQWtCLFNBYlg7QUFjUEMsc0JBQW1CLG9EQWRaO0FBZVBDLG9CQUFpQixFQWZWO0FBZ0JQQyxxQkFBa0IsUUFoQlg7QUFpQlBDLGNBQVcsSUFqQko7O0FBbUJQO0FBQ0FDLGFBQVUsRUFwQkg7O0FBc0JQO0FBQ0FDLG1CQUFnQix3QkFBU0MsS0FBVCxFQUFnQjtBQUMvQixRQUFJQyxPQUFPLEVBQVg7QUFDQUEsU0FBS0MsSUFBTCxDQUFVLGdCQUFnQkYsTUFBTUcsRUFBdEIsR0FBMkIsV0FBckM7QUFDQSxTQUFLLElBQUlDLElBQUksQ0FBYixFQUFnQkEsSUFBSUosTUFBTUssSUFBTixDQUFXQyxRQUFYLENBQW9CQyxNQUF4QyxFQUFnREgsR0FBaEQsRUFBcUQ7QUFDcERILFVBQUtDLElBQUwsQ0FBVSx1Q0FBdUNGLE1BQU1LLElBQU4sQ0FBV0MsUUFBWCxDQUFvQkYsQ0FBcEIsRUFBdUJJLGVBQTlELEdBQWdGLFdBQTFGO0FBQ0EsU0FBSVIsTUFBTUssSUFBTixDQUFXQyxRQUFYLENBQW9CRixDQUFwQixFQUF1QkssS0FBM0IsRUFBa0M7QUFDakNSLFdBQUtDLElBQUwsQ0FBVUYsTUFBTUssSUFBTixDQUFXQyxRQUFYLENBQW9CRixDQUFwQixFQUF1QkssS0FBakM7QUFDQTtBQUNEUixVQUFLQyxJQUFMLENBQVUsT0FBVjtBQUNBO0FBQ0RELFNBQUtDLElBQUwsQ0FBVSxPQUFWOztBQUVBLFdBQU9ELEtBQUtTLElBQUwsQ0FBVSxFQUFWLENBQVA7QUFDQTtBQXBDTTtBQURRLEVBQWpCOztBQXlDQW5DLE9BQU1BLEtBQU4sR0FBY0EsS0FBZDs7QUFFQSxRQUFPQSxLQUFQO0FBQ0EsQ0FyREQiLCJmaWxlIjoiY29yZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XHJcblxyXG5cdC8vIE9jY3VweSB0aGUgZ2xvYmFsIHZhcmlhYmxlIG9mIENoYXJ0LCBhbmQgY3JlYXRlIGEgc2ltcGxlIGJhc2UgY2xhc3NcclxuXHR2YXIgQ2hhcnQgPSBmdW5jdGlvbihpdGVtLCBjb25maWcpIHtcclxuXHRcdHRoaXMuY29udHJvbGxlciA9IG5ldyBDaGFydC5Db250cm9sbGVyKGl0ZW0sIGNvbmZpZywgdGhpcyk7XHJcblx0XHRyZXR1cm4gdGhpcy5jb250cm9sbGVyO1xyXG5cdH07XHJcblxyXG5cdC8vIEdsb2JhbGx5IGV4cG9zZSB0aGUgZGVmYXVsdHMgdG8gYWxsb3cgZm9yIHVzZXIgdXBkYXRpbmcvY2hhbmdpbmdcclxuXHRDaGFydC5kZWZhdWx0cyA9IHtcclxuXHRcdGdsb2JhbDoge1xyXG5cdFx0XHRyZXNwb25zaXZlOiB0cnVlLFxyXG5cdFx0XHRyZXNwb25zaXZlQW5pbWF0aW9uRHVyYXRpb246IDAsXHJcblx0XHRcdG1haW50YWluQXNwZWN0UmF0aW86IHRydWUsXHJcblx0XHRcdGV2ZW50czogWydtb3VzZW1vdmUnLCAnbW91c2VvdXQnLCAnY2xpY2snLCAndG91Y2hzdGFydCcsICd0b3VjaG1vdmUnXSxcclxuXHRcdFx0aG92ZXI6IHtcclxuXHRcdFx0XHRvbkhvdmVyOiBudWxsLFxyXG5cdFx0XHRcdG1vZGU6ICduZWFyZXN0JyxcclxuXHRcdFx0XHRpbnRlcnNlY3Q6IHRydWUsXHJcblx0XHRcdFx0YW5pbWF0aW9uRHVyYXRpb246IDQwMFxyXG5cdFx0XHR9LFxyXG5cdFx0XHRvbkNsaWNrOiBudWxsLFxyXG5cdFx0XHRkZWZhdWx0Q29sb3I6ICdyZ2JhKDAsMCwwLDAuMSknLFxyXG5cdFx0XHRkZWZhdWx0Rm9udENvbG9yOiAnIzY2NjY2NicsXHJcblx0XHRcdGRlZmF1bHRGb250RmFtaWx5OiBcIidIZWx2ZXRpY2EgTmV1ZScsICdIZWx2ZXRpY2EnLCAnQXJpYWwnLCBzYW5zLXNlcmlmXCIsXHJcblx0XHRcdGRlZmF1bHRGb250U2l6ZTogMTIsXHJcblx0XHRcdGRlZmF1bHRGb250U3R5bGU6ICdub3JtYWwnLFxyXG5cdFx0XHRzaG93TGluZXM6IHRydWUsXHJcblxyXG5cdFx0XHQvLyBFbGVtZW50IGRlZmF1bHRzIGRlZmluZWQgaW4gZWxlbWVudCBleHRlbnNpb25zXHJcblx0XHRcdGVsZW1lbnRzOiB7fSxcclxuXHJcblx0XHRcdC8vIExlZ2VuZCBjYWxsYmFjayBzdHJpbmdcclxuXHRcdFx0bGVnZW5kQ2FsbGJhY2s6IGZ1bmN0aW9uKGNoYXJ0KSB7XHJcblx0XHRcdFx0dmFyIHRleHQgPSBbXTtcclxuXHRcdFx0XHR0ZXh0LnB1c2goJzx1bCBjbGFzcz1cIicgKyBjaGFydC5pZCArICctbGVnZW5kXCI+Jyk7XHJcblx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjaGFydC5kYXRhLmRhdGFzZXRzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdFx0XHR0ZXh0LnB1c2goJzxsaT48c3BhbiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6JyArIGNoYXJ0LmRhdGEuZGF0YXNldHNbaV0uYmFja2dyb3VuZENvbG9yICsgJ1wiPjwvc3Bhbj4nKTtcclxuXHRcdFx0XHRcdGlmIChjaGFydC5kYXRhLmRhdGFzZXRzW2ldLmxhYmVsKSB7XHJcblx0XHRcdFx0XHRcdHRleHQucHVzaChjaGFydC5kYXRhLmRhdGFzZXRzW2ldLmxhYmVsKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHRleHQucHVzaCgnPC9saT4nKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0dGV4dC5wdXNoKCc8L3VsPicpO1xyXG5cclxuXHRcdFx0XHRyZXR1cm4gdGV4dC5qb2luKCcnKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdENoYXJ0LkNoYXJ0ID0gQ2hhcnQ7XHJcblxyXG5cdHJldHVybiBDaGFydDtcclxufTtcclxuIl19