'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

module.exports = function (Chart) {
	// Global Chart canvas helpers object for drawing items to canvas
	var helpers = Chart.canvasHelpers = {};

	helpers.drawPoint = function (ctx, pointStyle, radius, x, y) {
		var type, edgeLength, xOffset, yOffset, height, size;

		if ((typeof pointStyle === 'undefined' ? 'undefined' : _typeof(pointStyle)) === 'object') {
			type = pointStyle.toString();
			if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {
				ctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);
				return;
			}
		}

		if (isNaN(radius) || radius <= 0) {
			return;
		}

		switch (pointStyle) {
			// Default includes circle
			default:
				ctx.beginPath();
				ctx.arc(x, y, radius, 0, Math.PI * 2);
				ctx.closePath();
				ctx.fill();
				break;
			case 'triangle':
				ctx.beginPath();
				edgeLength = 3 * radius / Math.sqrt(3);
				height = edgeLength * Math.sqrt(3) / 2;
				ctx.moveTo(x - edgeLength / 2, y + height / 3);
				ctx.lineTo(x + edgeLength / 2, y + height / 3);
				ctx.lineTo(x, y - 2 * height / 3);
				ctx.closePath();
				ctx.fill();
				break;
			case 'rect':
				size = 1 / Math.SQRT2 * radius;
				ctx.beginPath();
				ctx.fillRect(x - size, y - size, 2 * size, 2 * size);
				ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);
				break;
			case 'rectRot':
				size = 1 / Math.SQRT2 * radius;
				ctx.beginPath();
				ctx.moveTo(x - size, y);
				ctx.lineTo(x, y + size);
				ctx.lineTo(x + size, y);
				ctx.lineTo(x, y - size);
				ctx.closePath();
				ctx.fill();
				break;
			case 'cross':
				ctx.beginPath();
				ctx.moveTo(x, y + radius);
				ctx.lineTo(x, y - radius);
				ctx.moveTo(x - radius, y);
				ctx.lineTo(x + radius, y);
				ctx.closePath();
				break;
			case 'crossRot':
				ctx.beginPath();
				xOffset = Math.cos(Math.PI / 4) * radius;
				yOffset = Math.sin(Math.PI / 4) * radius;
				ctx.moveTo(x - xOffset, y - yOffset);
				ctx.lineTo(x + xOffset, y + yOffset);
				ctx.moveTo(x - xOffset, y + yOffset);
				ctx.lineTo(x + xOffset, y - yOffset);
				ctx.closePath();
				break;
			case 'star':
				ctx.beginPath();
				ctx.moveTo(x, y + radius);
				ctx.lineTo(x, y - radius);
				ctx.moveTo(x - radius, y);
				ctx.lineTo(x + radius, y);
				xOffset = Math.cos(Math.PI / 4) * radius;
				yOffset = Math.sin(Math.PI / 4) * radius;
				ctx.moveTo(x - xOffset, y - yOffset);
				ctx.lineTo(x + xOffset, y + yOffset);
				ctx.moveTo(x - xOffset, y + yOffset);
				ctx.lineTo(x + xOffset, y - yOffset);
				ctx.closePath();
				break;
			case 'line':
				ctx.beginPath();
				ctx.moveTo(x - radius, y);
				ctx.lineTo(x + radius, y);
				ctx.closePath();
				break;
			case 'dash':
				ctx.beginPath();
				ctx.moveTo(x, y);
				ctx.lineTo(x + radius, y);
				ctx.closePath();
				break;
		}

		ctx.stroke();
	};
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUuY2FudmFzSGVscGVycy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiQ2hhcnQiLCJoZWxwZXJzIiwiY2FudmFzSGVscGVycyIsImRyYXdQb2ludCIsImN0eCIsInBvaW50U3R5bGUiLCJyYWRpdXMiLCJ4IiwieSIsInR5cGUiLCJlZGdlTGVuZ3RoIiwieE9mZnNldCIsInlPZmZzZXQiLCJoZWlnaHQiLCJzaXplIiwidG9TdHJpbmciLCJkcmF3SW1hZ2UiLCJ3aWR0aCIsImlzTmFOIiwiYmVnaW5QYXRoIiwiYXJjIiwiTWF0aCIsIlBJIiwiY2xvc2VQYXRoIiwiZmlsbCIsInNxcnQiLCJtb3ZlVG8iLCJsaW5lVG8iLCJTUVJUMiIsImZpbGxSZWN0Iiwic3Ryb2tlUmVjdCIsImNvcyIsInNpbiIsInN0cm9rZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQUEsT0FBT0MsT0FBUCxHQUFpQixVQUFTQyxLQUFULEVBQWdCO0FBQ2hDO0FBQ0EsS0FBSUMsVUFBVUQsTUFBTUUsYUFBTixHQUFzQixFQUFwQzs7QUFFQUQsU0FBUUUsU0FBUixHQUFvQixVQUFTQyxHQUFULEVBQWNDLFVBQWQsRUFBMEJDLE1BQTFCLEVBQWtDQyxDQUFsQyxFQUFxQ0MsQ0FBckMsRUFBd0M7QUFDM0QsTUFBSUMsSUFBSixFQUFVQyxVQUFWLEVBQXNCQyxPQUF0QixFQUErQkMsT0FBL0IsRUFBd0NDLE1BQXhDLEVBQWdEQyxJQUFoRDs7QUFFQSxNQUFJLFFBQU9ULFVBQVAseUNBQU9BLFVBQVAsT0FBc0IsUUFBMUIsRUFBb0M7QUFDbkNJLFVBQU9KLFdBQVdVLFFBQVgsRUFBUDtBQUNBLE9BQUlOLFNBQVMsMkJBQVQsSUFBd0NBLFNBQVMsNEJBQXJELEVBQW1GO0FBQ2xGTCxRQUFJWSxTQUFKLENBQWNYLFVBQWQsRUFBMEJFLElBQUlGLFdBQVdZLEtBQVgsR0FBbUIsQ0FBakQsRUFBb0RULElBQUlILFdBQVdRLE1BQVgsR0FBb0IsQ0FBNUU7QUFDQTtBQUNBO0FB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QVdwQixJQUFJRCxNQUFmLEVBQXVCRSxDQUF2QjtBQUNBSixRQUFJbUIsU0FBSjtBQUNBO0FBN0VEOztBQWdGQW5CLE1BQUk2QixNQUFKO0FBQ0EsRUFoR0Q7QUFpR0EsQ0FyR0QiLCJmaWxlIjoiY29yZS5jYW52YXNIZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihDaGFydCkge1xyXG5cdC8vIEdsb2JhbCBDaGFydCBjYW52YXMgaGVscGVycyBvYmplY3QgZm9yIGRyYXdpbmcgaXRlbXMgdG8gY2FudmFzXHJcblx0dmFyIGhlbHBlcnMgPSBDaGFydC5jYW52YXNIZWxwZXJzID0ge307XHJcblxyXG5cdGhlbHBlcnMuZHJhd1BvaW50ID0gZnVuY3Rpb24oY3R4LCBwb2ludFN0eWxlLCByYWRpdXMsIHgsIHkpIHtcclxuXHRcdHZhciB0eXBlLCBlZGdlTGVuZ3RoLCB4T2Zmc2V0LCB5T2Zmc2V0LCBoZWlnaHQsIHNpemU7XHJcblxyXG5cdFx0aWYgKHR5cGVvZiBwb2ludFN0eWxlID09PSAnb2JqZWN0Jykge1xyXG5cdFx0XHR0eXBlID0gcG9pbnRTdHlsZS50b1N0cmluZygpO1xyXG5cdFx0XHRpZiAodHlwZSA9PT0gJ1tvYmplY3QgSFRNTEltYWdlRWxlbWVudF0nIHx8IHR5cGUgPT09ICdbb2JqZWN0IEhUTUxDYW52YXNFbGVtZW50XScpIHtcclxuXHRcdFx0XHRjdHguZHJhd0ltYWdlKHBvaW50U3R5bGUsIHggLSBwb2ludFN0eWxlLndpZHRoIC8gMiwgeSAtIHBvaW50U3R5bGUuaGVpZ2h0IC8gMik7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKGlzTmFOKHJhZGl1cykgfHwgcmFkaXVzIDw9IDApIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdHN3aXRjaCAocG9pbnRTdHlsZSkge1xyXG5cdFx0Ly8gRGVmYXVsdCBpbmNsdWRlcyBjaXJjbGVcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdGN0eC5iZWdpblBhdGgoKTtcclxuXHRcdFx0Y3R4LmFyYyh4LCB5LCByYWRpdXMsIDAsIE1hdGguUEkgKiAyKTtcclxuXHRcdFx0Y3R4LmNsb3NlUGF0aCgpO1xyXG5cdFx0XHRjdHguZmlsbCgpO1xyXG5cdFx0XHRicmVhaztcclxuXHRcdGNhc2UgJ3RyaWFuZ2xlJzpcclxuXHRcdFx0Y3R4LmJlZ2luUGF0aCgpO1xyXG5cdFx0XHRlZGdlTGVuZ3RoID0gMyAqIHJhZGl1cyAvIE1hdGguc3FydCgzKTtcclxuXHRcdFx0aGVpZ2h0ID0gZWRnZUxlbmd0aCAqIE1hdGguc3FydCgzKSAvIDI7XHJcblx0XHRcdGN0eC5tb3ZlVG8oeCAtIGVkZ2VMZW5ndGggLyAyLCB5ICsgaGVpZ2h0IC8gMyk7XHJcblx0XHRcdGN0eC5saW5lVG8oeCArIGVkZ2VMZW5ndGggLyAyLCB5ICsgaGVpZ2h0IC8gMyk7XHJcblx0XHRcdGN0eC5saW5lVG8oeCwgeSAtIDIgKiBoZWlnaHQgLyAzKTtcclxuXHRcdFx0Y3R4LmNsb3NlUGF0aCgpO1xyXG5cdFx0XHRjdHguZmlsbCgpO1xyXG5cdFx0XHRicmVhaztcclxuXHRcdGNhc2UgJ3JlY3QnOlxyXG5cdFx0XHRzaXplID0gMSAvIE1hdGguU1FSVDIgKiByYWRpdXM7XHJcblx0XHRcdGN0eC5iZWdpblBhdGgoKTtcclxuXHRcdFx0Y3R4LmZpbGxSZWN0KHggLSBzaXplLCB5IC0gc2l6ZSwgMiAqIHNpemUsIDIgKiBzaXplKTtcclxuXHRcdFx0Y3R4LnN0cm9rZVJlY3QoeCAtIHNpemUsIHkgLSBzaXplLCAyICogc2l6ZSwgMiAqIHNpemUpO1xyXG5cdFx0XHRicmVhaztcclxuXHRcdGNhc2UgJ3JlY3RSb3QnOlxyXG5cdFx0XHRzaXplID0gMSAvIE1hdGguU1FSVDIgKiByYWRpdXM7XHJcblx0XHRcdGN0eC5iZWdpblBhdGgoKTtcclxuXHRcdFx0Y3R4Lm1vdmVUbyh4IC0gc2l6ZSwgeSk7XHJcblx0XHRcdGN0eC5saW5lVG8oeCwgeSArIHNpemUpO1xyXG5cdFx0XHRjdHgubGluZVRvKHggKyBzaXplLCB5KTtcclxuXHRcdFx0Y3R4LmxpbmVUbyh4LCB5IC0gc2l6ZSk7XHJcblx0XHRcdGN0eC5jbG9zZVBhdGgoKTtcclxuXHRcdFx0Y3R4LmZpbGwoKTtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlICdjcm9zcyc6XHJcblx0XHRcdGN0eC5iZWdpblBhdGgoKTtcclxuXHRcdFx0Y3R4Lm1vdmVUbyh4LCB5ICsgcmFkaXVzKTtcclxuXHRcdFx0Y3R4LmxpbmVUbyh4LCB5IC0gcmFkaXVzKTtcclxuXHRcdFx0Y3R4Lm1vdmVUbyh4IC0gcmFkaXVzLCB5KTtcclxuXHRcdFx0Y3R4LmxpbmVUbyh4ICsgcmFkaXVzLCB5KTtcclxuXHRcdFx0Y3R4LmNsb3NlUGF0aCgpO1xyXG5cdFx0XHRicmVhaztcclxuXHRcdGNhc2UgJ2Nyb3NzUm90JzpcclxuXHRcdFx0Y3R4LmJlZ2luUGF0aCgpO1xyXG5cdFx0XHR4T2Zmc2V0ID0gTWF0aC5jb3MoTWF0aC5QSSAvIDQpICogcmFkaXVzO1xyXG5cdFx0XHR5T2Zmc2V0ID0gTWF0aC5zaW4oTWF0aC5QSSAvIDQpICogcmFkaXVzO1xyXG5cdFx0XHRjdHgubW92ZVRvKHggLSB4T2Zmc2V0LCB5IC0geU9mZnNldCk7XHJcblx0XHRcdGN0eC5saW5lVG8oeCArIHhPZmZzZXQsIHkgKyB5T2Zmc2V0KTtcclxuXHRcdFx0Y3R4Lm1vdmVUbyh4IC0geE9mZnNldCwgeSArIHlPZmZzZXQpO1xyXG5cdFx0XHRjdHgubGluZVRvKHggKyB4T2Zmc2V0LCB5IC0geU9mZnNldCk7XHJcblx0XHRcdGN0eC5jbG9zZVBhdGgoKTtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlICdzdGFyJzpcclxuXHRcdFx0Y3R4LmJlZ2luUGF0aCgpO1xyXG5cdFx0XHRjdHgubW92ZVRvKHgsIHkgKyByYWRpdXMpO1xyXG5cdFx0XHRjdHgubGluZVRvKHgsIHkgLSByYWRpdXMpO1xyXG5cdFx0XHRjdHgubW92ZVRvKHggLSByYWRpdXMsIHkpO1xyXG5cdFx0XHRjdHgubGluZVRvKHggKyByYWRpdXMsIHkpO1xyXG5cdFx0XHR4T2Zmc2V0ID0gTWF0aC5jb3MoTWF0aC5QSSAvIDQpICogcmFkaXVzO1xyXG5cdFx0XHR5T2Zmc2V0ID0gTWF0aC5zaW4oTWF0aC5QSSAvIDQpICogcmFkaXVzO1xyXG5cdFx0XHRjdHgubW92ZVRvKHggLSB4T2Zmc2V0LCB5IC0geU9mZnNldCk7XHJcblx0XHRcdGN0eC5saW5lVG8oeCArIHhPZmZzZXQsIHkgKyB5T2Zmc2V0KTtcclxuXHRcdFx0Y3R4Lm1vdmVUbyh4IC0geE9mZnNldCwgeSArIHlPZmZzZXQpO1xyXG5cdFx0XHRjdHgubGluZVRvKHggKyB4T2Zmc2V0LCB5IC0geU9mZnNldCk7XHJcblx0XHRcdGN0eC5jbG9zZVBhdGgoKTtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlICdsaW5lJzpcclxuXHRcdFx0Y3R4LmJlZ2luUGF0aCgpO1xyXG5cdFx0XHRjdHgubW92ZVRvKHggLSByYWRpdXMsIHkpO1xyXG5cdFx0XHRjdHgubGluZVRvKHggKyByYWRpdXMsIHkpO1xyXG5cdFx0XHRjdHguY2xvc2VQYXRoKCk7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0Y2FzZSAnZGFzaCc6XHJcblx0XHRcdGN0eC5iZWdpblBhdGgoKTtcclxuXHRcdFx0Y3R4Lm1vdmVUbyh4LCB5KTtcclxuXHRcdFx0Y3R4LmxpbmVUbyh4ICsgcmFkaXVzLCB5KTtcclxuXHRcdFx0Y3R4LmNsb3NlUGF0aCgpO1xyXG5cdFx0XHRicmVhaztcclxuXHRcdH1cclxuXHJcblx0XHRjdHguc3Ryb2tlKCk7XHJcblx0fTtcclxufTtcclxuIl19